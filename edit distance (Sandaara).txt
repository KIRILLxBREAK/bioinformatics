def levDistance(v, w):
    n = len(v)
    m = len(w)
    D = [[0] * (m+1) for i in range(n+1)] #double dimension matrix (list comprehension)
    
    #first string and first column
    for i in range(n+1):
        D[i][0] = i
    for j in range(m+1):
        D[0][j] = j
        
    for i in range(1, n+1):
        for j in range(1, m+1):
            k = (v[i-1]!=w[j-1]) #check if i-symbol in v = j-symbol in w
            D[i][j] = min(D[i-1][j]+1, D[i][j-1]+1, D[i-1][j-1]+int(k))
    print D[n][m]
   
f = open('rosalind_edit.txt', 'r')
file = []
d = {}
for line in f
    file.append(line.replace('n',''))

array=[]
i=0
while ilen(file) 
    if (file[i].find('')==0)
        j=1
        temp=''
        while (i+j)len(file) and file[i+j].find('')!=0
            temp += file[i+j]
            j+=1
        array.append(temp)
    i+=1 

n=array[0] 
m=array[1]

levDistance(n,m)
